{"version":3,"sources":["components/ContactMe.jsx","img/pp.png","img/Resume.pdf","components/AboutMe.tsx","components/SideBar.tsx","components/AssetTracker/BoringTracker.tsx","components/AssetTracker/CryptoTracker.tsx","components/AssetTracker/Countdown.tsx","components/AssetTracker/AssetTracker.tsx","components/Terminal.tsx","components/index.tsx","App.jsx","serviceWorker.js","index.js"],"names":["ContactMe","state","formSubmitted","name","email","contactNumber","message","fetch","this","setState","style","width","padding","margin","height","Typography","variant","id","encType","action","target","onSubmit","Grid","container","direction","spacing","item","Link","href","color","TextField","type","label","onChange","event","value","fullWidth","multiline","rows","onClick","handleSubmit","border","backgroundColor","fontSize","textTransform","cursor","display","onLoad","Component","useStyles","makeStyles","theme","header","textAlign","marginBottom","borderRadius","marginTop","image","imagecontainer","justifyContent","iconcontainer","icons","transform","maintext","root","AboutMe","classes","className","src","pp","Button","rel","Pdf","to","component","MUILink","SideBar","useState","isOpen","setIsOpen","reload","setReload","useEffect","localStorage","getItem","IconButton","SwipeableDrawer","anchor","open","onClose","onOpen","List","Pages","map","page","undefined","ListItem","button","link","ListItemIcon","children","icon","ListItemText","primary","Switch","checked","window","location","split","setItem","apiinput","table","searchresult","BoringTracker","isLoading","setIsLoading","apiKey","setAPIKey","keyword","setKeyword","showSearchResults","setShowSearchResults","searchResults","setSearchResults","showForm","setShowForm","formStuff","setFormStuff","formQuantity","setFormQuantity","formPrice","setFormPrice","boringData","setBoringData","errorMessage","refresh","setRefresh","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","kw","a","axios","get","then","resp","data","bestMatches","calculatePL","starting","end","i","line","quantity","price","parseFloat","toFixed","size","e","JSON","stringify","disabled","queryTicker","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","index","symbol","region","Paper","elevation","xs","newData","ticker","push","high","low","pl","splice","combobox","overflowY","arrangeHorizontally","CryptoTracker","setCurrencies","cryptoCurrencies","setCryptoCurrencies","selectCurrency","cryptoData","setCryptoData","showAddEntry","setShowAddEntry","formCrypto","setFormCrypto","formValue","setFormValue","formPrincipal","setFormPrincipal","crypto","principal","editValuesIndex","setEditValuesIndex","calculateNetProfit","total","displayPrincipal","toLocaleString","maximumFractionDigits","getCurrentPrice","fiat","result","amount","fetchCurrency","tempcurrencies","c","fetchCryptoCurrency","fiatCurrencies","Object","keys","rates","includes","fetchStoredValues","temp","parse","currPrice","currentPrice","setTimeout","EditValuesButtons","colSpan","customInput","onValueChange","values","floatValue","prefix","paddingRight","Autocomplete","options","renderInput","params","Countdown","timings","lse_close","Date","UTC","getFullYear","getMonth","getDate","lse_open","nyse_open","nyse_close","timeleft","endDate","difference","timeLeft","days","hours","minutes","seconds","radioSelect","setRadioSelect","remainingTime","setRemainingTime","RadioGroup","defaultValue","justify","sm","FormControlLabel","control","Radio","alignItems","AssetTracker","main","position","headerButtons","inputField","background","marginLeft","minimise","bottom","Terminal","React","isMinimised","setIsMinimised","history","setHistory","command","setCommand","isDragging","origin","x","y","translation","innerWidth","innerHeight","lastTranslation","useHistory","handleMouseMove","clientX","clientY","abs","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","console","log","right","alert","onKeyDown","key","res","tmp","App","basename","exact","path","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9bd3a541.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Paper,\n  TextField,\n  Grid,\n  Typography,\n  Button,\n  Link,\n  makeStyles,\n} from \"@material-ui/core\";\n\nclass ContactMe extends Component {\n  constructor() {\n    super();\n    this.state = {\n      formSubmitted: false,\n      name: \"\",\n      email: \"\",\n      contactNumber: \"\",\n      message: \"\",\n    };\n  }\n\n  handleSubmit() {\n    fetch(\n      \"https://docs.google.com/forms/d/e/1FAIpQLSeRk58rRnbE1XDd_6RZ6i9RIPTDPZT9YgsQ_4B7-Ff0mqQE3w/formResponse?usp=pp_url&entry.963742205=\" +\n        this.state.name +\n        \"&entry.1053435119=\" +\n        this.state.email +\n        \"&entry.1110637641=\" +\n        this.state.contactNumber +\n        \"&entry.63678808=\" +\n        this.state.message\n    );\n    this.setState({\n      formSubmitted: true,\n    });\n  }\n\n  render() {\n    if (this.state.formSubmitted) {\n      return (\n        <div style={{ width: \"80vw\", padding: 20, margin: \"auto\", height:\"100vh\" }}>\n          <Typography variant=\"h4\">\n            Thank you for your submission I will get back to you as soon as\n            possible!\n          </Typography>\n        </div>\n      );\n    } else {\n      return (\n        <div style={{ height: '100vh', width: '90vw', padding: 20, margin: 'auto' }}>\n          <form\n            name=\"gform\"\n            id=\"gform\"\n            encType=\"text/plain\"\n            action=\"https://docs.google.com/forms/d/e/1FAIpQLSeRk58rRnbE1XDd_6RZ6i9RIPTDPZT9YgsQ_4B7-Ff0mqQE3w/formResponse?\"\n            target=\"hidden_iframe\"\n            onSubmit=\"submitted=true;\"\n          >\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <Typography variant=\"h5\">\n                  You may contact me at +65 86601996 and at{' '}\n                  <Link href=\"mailto:leesherman@live.com.sg\" color=\"secondary\">\n                    leesherman@live.com.sg\n                  </Link>\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\">\n                  Alternatively, you may fill in the form below and I shall get back to\n                  you as soon as possible.\n                </Typography>\n              </Grid>\n              <Grid item>\n                <TextField\n                  color=\"secondary\"\n                  type=\"text\"\n                  name=\"entry.963742205\"\n                  id=\"entry.963742205\"\n                  label=\"Name\"\n                  onChange={(event) => {\n                    this.setState({ name: event.target.value });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  color=\"secondary\"\n                  type=\"text\"\n                  name=\"entry.1053435119\"\n                  id=\"entry.1053435119\"\n                  label=\"Email\"\n                  onChange={(event) => {\n                    this.setState({ email: event.target.value });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  color=\"secondary\"\n                  type=\"text\"\n                  name=\"entry.1110637641\"\n                  id=\"entry.1110637641\"\n                  label=\"Contact Number\"\n                  onChange={(event) => {\n                    this.setState({ contactNumber: event.target.value });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  color=\"secondary\"\n                  type=\"text\"\n                  name=\"entry.63678808\"\n                  id=\"entry.63678808\"\n                  label=\"Message\"\n                  onChange={(event) => {\n                    this.setState({ message: event.target.value });\n                  }}\n                  fullWidth\n                  multiline\n                  rows={4}\n                />\n              </Grid>\n              <Grid item>\n                <input\n                  id=\"popUp\"\n                  type=\"submit\"\n                  value=\"submit\"\n                  onClick={() => this.handleSubmit()}\n                  style={{\n                    border: 'none',\n                    backgroundColor: '#ffffff',\n                    fontSize: '15px',\n                    textTransform: 'uppercase',\n                    cursor: 'pointer',\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </form>\n          {/* <Button\n            onClick={() => {\n              console.log(this.state);\n            }}\n          >\n            Check values\n          </Button> */}\n          <iframe\n            name=\"hidden_iframe\"\n            id=\"hidden_iframe\"\n            style={{ display: 'none' }}\n            onLoad=\"if(submitted) {}\"\n          ></iframe>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ContactMe;\n// https://docs.google.com/forms/d/e/1FAIpQLSeRk58rRnbE1XDd_6RZ6i9RIPTDPZT9YgsQ_4B7-Ff0mqQE3w/viewform?usp=pp_url&entry.963742205=Sherman&entry.1053435119=leesherman@live.com.sg&entry.1110637641=86601996&entry.63678808=you+rock!\n// https://docs.google.com/forms/d/e/1FAIpQLSeRk58rRnbE1XDd_6RZ6i9RIPTDPZT9YgsQ_4B7-Ff0mqQE3w/formResponse?usp=pp_url&entry.963742205=Name&entry.1053435119=Email&entry.1110637641=Mobile+Number&entry.63678808=Question\n","export default __webpack_public_path__ + \"static/media/pp.d83a0ba8.png\";","export default __webpack_public_path__ + \"static/media/Resume.5f132bec.pdf\";","import { Grid, makeStyles, Typography, Button, Link as MUILink } from '@material-ui/core';\nimport React from 'react';\nimport pp from '../img/pp.png';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport Pdf from '../img/Resume.pdf';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    header: { textAlign: 'center', marginBottom: theme.spacing(4) },\n    item: {\n      width: '100%',\n      textAlign: 'center',\n      borderRadius: '5px',\n      marginTop: '10px',\n    },\n    image: {\n      width: '300px',\n    },\n    imagecontainer: {\n      textAlign: 'center',\n      justifyContent: 'center',\n      marginBottom: theme.spacing(3),\n    },\n    iconcontainer: {\n      display: 'flex',\n      marginBottom: theme.spacing(2),\n      justifyContent: 'center',\n    },\n    icons: { transform: 'scale(2)' },\n    maintext: { width: '50%', margin: '5% auto 0 auto', textAlign: 'center' },\n    root: { marginBottom: '20%', width: '100vw' },\n  };\n});\n\nconst AboutMe = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\" className={classes.header}>\n        Welcome to my developer profile.\n      </Typography>\n      <div className={classes.imagecontainer}>\n        <img src={pp} className={classes.image} />\n      </div>\n      <div className={classes.iconcontainer}>\n        <Button href=\"https://github.com/shermanleejm\" target=\"_blank\" rel=\"noopener\">\n          <GitHubIcon className={classes.icons} />\n        </Button>\n        <Button href=\"https://www.linkedin.com/in/shrmnl/\" target=\"_blank\" rel=\"noopener\">\n          <LinkedInIcon className={classes.icons} />\n        </Button>\n        <Button href={Pdf} target=\"_blank\" rel=\"noopener\">\n          <MenuBookIcon className={classes.icons} />\n        </Button>\n      </div>\n      <div className={classes.maintext}>\n        <Typography>\n          I make stuff. I have an asset tracker that you can play with{' '}\n          <Link to=\"/tracker\" component={MUILink}>\n            here\n          </Link>\n          .\n        </Typography>\n        <br />\n        <Typography>\n          You can visit my github profile by clicking the icon above.{' '}\n        </Typography>\n        <br />\n        <Typography>\n          I am currently working on a blockchain network that focuses on tamper-proof\n          <br />\n          contracts and distributed programming, feel free to hit me up using the{' '}\n          <Link to=\"/contact-me\" component={MUILink}>\n            contact me page\n          </Link>\n          .\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutMe;\n","import {\n  ListItem,\n  List,\n  SwipeableDrawer,\n  IconButton,\n  ListItemText,\n  ListItemIcon,\n  Switch,\n  makeStyles,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Pages } from './index';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n  };\n});\n\nconst SideBar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [reload, setReload] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    localStorage.getItem('homepage');\n  }, [reload]);\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={() => setIsOpen(true)}>\n        <MenuIcon />\n      </IconButton>\n      <SwipeableDrawer\n        anchor=\"left\"\n        open={isOpen}\n        onClose={() => setIsOpen(false)}\n        onOpen={() => {\n          setIsOpen(true);\n        }}\n      >\n        <List>\n          {Pages.map((page) => {\n            if (page.name !== undefined) {\n              return (\n                <ListItem\n                  button\n                  key={page.name}\n                  component={Link}\n                  to={page.link}\n                  onClick={() => setIsOpen(false)}\n                >\n                  <ListItemIcon children={page.icon} />\n                  <ListItemText primary={page.name} />\n                </ListItem>\n              );\n            }\n          })}\n        </List>\n      </SwipeableDrawer>\n      <span>\n        set as homepage{' '}\n        <Switch\n          checked={\n            localStorage.getItem('homepage') === window.location.href.split('#')[1]\n          }\n          onChange={() => {\n            if (localStorage.getItem('homepage') === window.location.href.split('#')[1]) {\n              localStorage.setItem('homepage', '');\n            } else {\n              localStorage.setItem('homepage', window.location.href.split('#')[1]);\n            }\n            setReload(!reload);\n          }}\n        />\n      </span>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import {\n  Button,\n  makeStyles,\n  TextField,\n  Typography,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  IconButton,\n  Grid,\n  Paper,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    header: { margin: '3% 0 3% 0' },\n    root: { margin: '0 4% 10% 4%' },\n    apiinput: { width: '60%', margin: '0 0 3% 0' },\n    table: { margin: '0 0 3% 0' },\n    searchresult: { padding: '4%', marginBottom: '4%' },\n  };\n});\n\nconst BoringTracker = () => {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(true);\n  const [apiKey, setAPIKey] = useState() as any;\n  const [keyword, setKeyword] = useState('');\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [formStuff, setFormStuff] = useState() as any;\n  const [formQuantity, setFormQuantity] = useState() as any;\n  const [formPrice, setFormPrice] = useState('');\n  const [boringData, setBoringData] = useState([]) as any;\n  const [errorMessage, setErrorMessage] = useState() as any;\n  const [refresh, setRefresh] = useState(false);\n\n  function shuffle(array: any[]) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  useEffect(() => {\n    async function getPrice(ticker: string) {\n      let result = {};\n      await axios\n        .get(\n          `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${ticker}&apikey=${apiKey}`\n        )\n        .then((resp) => {\n          result = resp.data['Global Quote'];\n        });\n      return result;\n    }\n\n    async function fetchLocalData() {\n      let item = JSON.parse(localStorage.getItem('apikey') || '[]');\n      console.log(item);\n      if (item.length > 0) {\n        setAPIKey(item);\n      } else {\n        setAPIKey('1111111');\n      }\n      item = JSON.parse(localStorage.getItem('boring') || '[]');\n      if (item.length > 0) {\n        for (let line of item) {\n          let tickerData: any = await getPrice(line.ticker);\n          if (tickerData === undefined) {\n            setErrorMessage('Alpha Vantage only allows 5 requests every minute.');\n            setIsLoading(false);\n            return;\n\n            line.high = parseFloat(tickerData['03. high']);\n            line.low = parseFloat(tickerData['04. low']);\n            line.open = parseFloat(tickerData['02. open']);\n            line.pl = parseFloat(\n              (((tickerData['02. open'] - line.price) / line.price) * 100).toFixed(2)\n            );\n          }\n          localStorage.setItem('boring', JSON.stringify(shuffle(item)));\n          setBoringData(item);\n        }\n\n        setErrorMessage(undefined);\n        setIsLoading(false);\n      }\n      console.log('calling useEffect on Boring Tracker');\n      fetchLocalData();\n    }\n  }, [refresh]);\n\n  async function queryTicker(kw: string) {\n    await axios\n      .get(\n        `https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${kw}&apikey=${apiKey}`\n      )\n      .then((resp) => {\n        setSearchResults(resp.data.bestMatches);\n      });\n  }\n\n  function calculatePL() {\n    let starting = 0;\n    let end = 0;\n    for (let i = 0; i < boringData.length; i++) {\n      let line: any = boringData[i];\n      starting += line.quantity * line.price;\n      end += line.quantity * line.open;\n    }\n    return parseFloat((((end - starting) / starting) * 100).toFixed(2));\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography style={{ color: 'red' }}>\n        {errorMessage !== undefined && errorMessage}\n      </Typography>\n\n      <Typography variant=\"h4\" className={classes.header}>\n        Boring{' '}\n        <span style={{ color: calculatePL() > 0 ? 'green' : 'red' }}>\n          {calculatePL() > 0 && '+'}\n          {calculatePL()}%\n        </span>\n      </Typography>\n\n      <TextField\n        label=\"Alpha Vantage API key\"\n        size=\"small\"\n        value={apiKey}\n        onChange={(e) => setAPIKey(e.target.value)}\n        className={classes.apiinput}\n      />\n      <Button\n        onClick={() => {\n          localStorage.setItem('apikey', JSON.stringify(apiKey));\n        }}\n      >\n        save api key\n      </Button>\n\n      <TextField\n        label=\"Add new boring equity\"\n        size=\"small\"\n        value={keyword}\n        onChange={(e) => setKeyword(e.target.value)}\n        className={classes.apiinput}\n      />\n      <Button\n        disabled={!keyword}\n        onClick={() => {\n          queryTicker(keyword);\n          setShowSearchResults(true);\n        }}\n      >\n        search\n      </Button>\n\n      {showSearchResults && keyword !== '' && (\n        <TableContainer className={classes.table}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Symbol</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Type</TableCell>\n                <TableCell>Region</TableCell>\n                <TableCell>Correct?</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {searchResults.map((row, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>{row['1. symbol']}</TableCell>\n                    <TableCell>{row['2. name']}</TableCell>\n                    <TableCell>{row['3. type']}</TableCell>\n                    <TableCell>{row['4. region']}</TableCell>\n                    <TableCell>\n                      <IconButton\n                        onClick={() => {\n                          setFormStuff({\n                            symbol: row['1. symbol'],\n                            name: row['2. name'],\n                            type: row['3. type'],\n                            region: row['4. region'],\n                          });\n                          setShowForm(true);\n                          setShowSearchResults(false);\n                        }}\n                      >\n                        <CheckIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n\n      {showForm && (\n        <Paper className={classes.searchresult} elevation={3}>\n          <Grid container spacing={3}>\n            <Grid item xs={4}>\n              Symbol: {formStuff.symbol}\n            </Grid>\n            <Grid item xs={8}>\n              Name: {formStuff.name}\n            </Grid>\n            <Grid item xs={4}>\n              Type: {formStuff.type}\n            </Grid>\n            <Grid item xs={8}>\n              Region: {formStuff.region}\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                label=\"Quantity\"\n                type=\"number\"\n                value={formQuantity}\n                onChange={(e) => {\n                  setFormQuantity(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                label=\"Price\"\n                type=\"number\"\n                value={formPrice}\n                onChange={(e) => {\n                  setFormPrice(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                fullWidth\n                onClick={() => {\n                  let newData = {\n                    ticker: formStuff.symbol,\n                    quantity: formQuantity,\n                    price: formPrice,\n                  };\n                  boringData.push(newData);\n                  localStorage.setItem('boring', JSON.stringify(shuffle(boringData)));\n                  setShowForm(false);\n                }}\n              >\n                submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      )}\n\n      {!isLoading && (\n        <TableContainer className={classes.table}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Ticker</TableCell>\n                <TableCell>Quantity</TableCell>\n                <TableCell>Cost</TableCell>\n                <TableCell>Open</TableCell>\n                <TableCell>High</TableCell>\n                <TableCell>Low</TableCell>\n                <TableCell>P/L (%)</TableCell>\n                <TableCell>Delete</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {boringData.map((row: any, index: number) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>{row.ticker}</TableCell>\n                    <TableCell>{row.quantity}</TableCell>\n                    <TableCell>{row.price}</TableCell>\n                    <TableCell>{row.open}</TableCell>\n                    <TableCell>{row.high}</TableCell>\n                    <TableCell>{row.low}</TableCell>\n                    <TableCell style={{ color: row.pl > 0 ? 'green' : 'red' }}>\n                      {row.pl > 0 && '+'}\n                      {row.pl}\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        onClick={() => {\n                          boringData.splice(index, 1);\n                          localStorage.setItem(\n                            'boring',\n                            JSON.stringify(shuffle(boringData))\n                          );\n                          setIsLoading(true);\n                        }}\n                      >\n                        <DeleteForeverIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n      <Button\n        onClick={() => {\n          setRefresh(!refresh);\n          setBoringData(shuffle(boringData));\n        }}\n      >\n        refresh\n      </Button>\n    </div>\n  );\n};\n\nexport default BoringTracker;\n","import {\n  makeStyles,\n  TextField,\n  Typography,\n  Button,\n  IconButton,\n  TableHead,\n  Table,\n  TableRow,\n  TableCell,\n  TableContainer,\n  TableBody,\n} from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport axios from 'axios';\nimport NumberFormat from 'react-number-format';\nimport React, { useState, useEffect } from 'react';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: { margin: '0 4% 0 4%' },\n    combobox: { padding: '3% 0 3% 0' },\n    header: { margin: '0 0 1% 0' },\n    table: { overflowY: 'scroll' },\n    arrangeHorizontally: { display: 'inline-block', textAlign: 'center' },\n  };\n});\nconst CryptoTracker = () => {\n  const classes = useStyles();\n  const [currencies, setCurrencies] = useState([]) as any;\n  const [cryptoCurrencies, setCryptoCurrencies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectCurrency, setSelectCurrency] = useState('SGD');\n  const [cryptoData, setCryptoData] = useState([]) as any;\n  const [showAddEntry, setShowAddEntry] = useState(false);\n  const [formCrypto, setFormCrypto] = useState() as any;\n  const [formValue, setFormValue] = useState() as any;\n  const [formPrincipal, setFormPrincipal] = useState() as any;\n  const [editValuesIndex, setEditValuesIndex] = useState({\n    crypto: -1,\n    quantity: -1,\n    principal: -1,\n  });\n  useEffect(() => {\n    // get current sell price\n    async function getCurrentPrice(crypto: string, fiat: string) {\n      let result = 0;\n      await axios\n        .get(`https://api.coinbase.com/v2/prices/${crypto}-${fiat}/sell`)\n        .then((resp) => {\n          result = parseFloat(resp.data.data.amount);\n        });\n      return result;\n    }\n    // get currencies\n    async function fetchCurrency() {\n      let result = [] as any;\n      await axios.get('https://api.coinbase.com/v2/currencies').then((resp) => {\n        let tempcurrencies = [];\n        for (let c of resp.data.data) {\n          tempcurrencies.push(c.id);\n        }\n        result = tempcurrencies;\n        setCurrencies(tempcurrencies);\n      });\n      return result;\n    }\n    async function fetchCryptoCurrency(fiatCurrencies: string[]) {\n      let result = [] as any;\n      await axios\n        .get('https://api.coinbase.com/v2/exchange-rates?currency=BTC')\n        .then((resp) => {\n          Object.keys(resp.data.data.rates).map((item) => {\n            if (!fiatCurrencies.includes(item)) {\n              result.push(item);\n            }\n          });\n          setCryptoCurrencies(result);\n        });\n    }\n    // get stored values\n    async function fetchStoredValues() {\n      let x = await fetchCurrency();\n      fetchCryptoCurrency(x);\n      let temp = JSON.parse(localStorage.getItem('crypto') || \"\");\n      if (temp !== \"\") {\n        for (let line of temp) {\n          let currPrice = await getCurrentPrice(line.name, selectCurrency);\n          line.pl = parseFloat(\n            (((currPrice * line.value - line.principal) / line.principal) * 100).toFixed(\n              2\n            )\n          );\n          line.currentPrice = currPrice;\n        }\n      } else {\n        temp = [];\n      }\n      setCryptoData(temp);\n      localStorage.setItem('crypto', JSON.stringify(temp));\n      setIsLoading(false);\n    }\n    setTimeout(() => {\n      fetchStoredValues();\n    }, 60000);\n    fetchStoredValues();\n  }, [isLoading]);\n\n  function calculateNetProfit(): number {\n    let total = 0;\n    let pl = 0;\n    for (let line of cryptoData) {\n      pl += (line.principal * line.pl) / 100;\n      total += line.principal;\n    }\n    return parseFloat(((pl / total) * 100).toFixed(2));\n  }\n\n  function displayPrincipal(principal: any) {\n    principal = principal.toLocaleString(undefined, { maximumFractionDigits: 2 });\n    return principal;\n  }\n\n  const EditValuesButtons: React.FC<{}> = () => {\n    return (\n      <div className={classes.arrangeHorizontally}>\n        <IconButton\n          onClick={() => {\n            setEditValuesIndex({\n              crypto: -1,\n              quantity: -1,\n              principal: -1,\n            });\n            localStorage.setItem('crypto', JSON.stringify(cryptoData));\n            setIsLoading(true);\n          }}\n        >\n          <CheckCircleIcon />\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            setEditValuesIndex({\n              crypto: -1,\n              quantity: -1,\n              principal: -1,\n            });\n          }}\n        >\n          <CancelIcon />\n        </IconButton>\n      </div>\n    );\n  };\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" className={classes.header}>\n        Crypto {'  '}\n        <span style={{ color: calculateNetProfit() > 0 ? 'green' : 'red' }}>\n          {calculateNetProfit() > 0 ? '+' : ''}\n          {calculateNetProfit()}%\n        </span>\n      </Typography>\n\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                <Typography>Currency (Current Price)</Typography>\n              </TableCell>\n              <TableCell colSpan={editValuesIndex.quantity !== -1 ? 3 : 1}>\n                <Typography>Quantity</Typography>\n              </TableCell>\n              <TableCell colSpan={editValuesIndex.principal !== -1 ? 3 : 1}>\n                <Typography>Principal</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography>Current</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography>Profit/Loss (%)</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography>Delete</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {!isLoading &&\n              cryptoData.map((crypto: any, index: any) => {\n                return (\n                  <TableRow>\n                    <TableCell>\n                      {`${crypto.name} (${selectCurrency}${displayPrincipal(\n                        crypto.currentPrice\n                      )})`}\n                    </TableCell>\n                    <TableCell colSpan={editValuesIndex.quantity !== -1 ? 3 : 1}>\n                      {editValuesIndex.quantity === index ? (\n                        <div style={{ width: '30vw' }}>\n                          <NumberFormat\n                            customInput={TextField}\n                            value={crypto.value}\n                            onValueChange={(values) => {\n                              let { floatValue } = values;\n                              let temp = cryptoData;\n                              temp[index].value = floatValue;\n                              setCryptoData(temp);\n                            }}\n                          />\n                          <EditValuesButtons />\n                        </div>\n                      ) : (\n                        <Typography\n                          onClick={() => {\n                            setFormValue(crypto.value);\n                            setEditValuesIndex({\n                              crypto: -1,\n                              quantity: index,\n                              principal: -1,\n                            });\n                          }}\n                        >\n                          {crypto.value}\n                        </Typography>\n                      )}\n                    </TableCell>\n                    <TableCell colSpan={editValuesIndex.principal !== -1 ? 3 : 1}>\n                      {editValuesIndex.principal === index ? (\n                        <div style={{ width: '30vw' }}>\n                          <NumberFormat\n                            customInput={TextField}\n                            prefix={selectCurrency}\n                            value={crypto.principal}\n                            onValueChange={(values) => {\n                              let { floatValue } = values;\n                              let temp = cryptoData;\n                              temp[index].principal = floatValue;\n                              setCryptoData(temp);\n                            }}\n                          />\n\n                          <span className={classes.arrangeHorizontally}>\n                            <IconButton\n                              onClick={() => {\n                                setEditValuesIndex({\n                                  crypto: -1,\n                                  quantity: -1,\n                                  principal: -1,\n                                });\n                                localStorage.setItem(\n                                  'crypto',\n                                  JSON.stringify(cryptoData)\n                                );\n                                setIsLoading(true);\n                              }}\n                            >\n                              <CheckCircleIcon />\n                            </IconButton>\n                            <IconButton\n                              onClick={() => {\n                                setEditValuesIndex({\n                                  crypto: -1,\n                                  quantity: -1,\n                                  principal: -1,\n                                });\n                              }}\n                            >\n                              <CancelIcon />\n                            </IconButton>\n                          </span>\n                        </div>\n                      ) : (\n                        <Typography\n                          onClick={() => {\n                            setEditValuesIndex({\n                              crypto: -1,\n                              principal: index,\n                              quantity: -1,\n                            });\n                            setFormPrincipal(crypto.principal);\n                          }}\n                        >\n                          {selectCurrency}\n                          {displayPrincipal(crypto.principal)}\n                        </Typography>\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      <Typography>\n                        {selectCurrency}\n                        {(\n                          parseFloat(crypto.currentPrice) * parseFloat(crypto.value)\n                        ).toLocaleString(undefined, { maximumFractionDigits: 2 })}\n                      </Typography>\n                    </TableCell>\n                    <TableCell style={{ color: crypto.pl > 0 ? 'green' : 'red' }}>\n                      <Typography>\n                        {crypto.pl > 0 && '+'}\n                        {crypto.pl || ''}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        onClick={() => {\n                          cryptoData.splice(index, 1);\n                          localStorage.setItem('crypto', JSON.stringify(cryptoData));\n                          setIsLoading(true);\n                        }}\n                      >\n                        <DeleteForeverIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            {showAddEntry && (\n              <TableRow>\n                <TableCell style={{ paddingRight: '5%' }}>\n                  <Autocomplete\n                    className={classes.combobox}\n                    options={cryptoCurrencies}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"outlined\"\n                        label=\"Crypto\"\n                        size=\"small\"\n                      />\n                    )}\n                    onChange={(e, value) => setFormCrypto(value)}\n                  />\n                </TableCell>\n                <TableCell>\n                  <NumberFormat\n                    style={{ width: '25vw' }}\n                    customInput={TextField}\n                    value={formValue}\n                    onValueChange={(values) => {\n                      let { floatValue } = values;\n                      setFormValue(floatValue || \"\");\n                    }}\n                  />\n                </TableCell>\n                <TableCell>\n                  <NumberFormat\n                    style={{ width: '25vw' }}\n                    customInput={TextField}\n                    prefix={selectCurrency}\n                    value={formPrincipal}\n                    onValueChange={(values) => {\n                      let { floatValue } = values;\n                      setFormPrincipal(floatValue);\n                    }}\n                  />\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {showAddEntry ? (\n        <div>\n          <Button\n            onClick={() => {\n              if (\n                formCrypto !== undefined &&\n                formPrincipal !== undefined &&\n                formValue !== undefined\n              ) {\n                cryptoData.push({\n                  name: formCrypto,\n                  value: formValue,\n                  principal: formPrincipal,\n                });\n                localStorage.setItem('crypto', JSON.stringify(cryptoData));\n                setIsLoading(true);\n              }\n              setShowAddEntry(false);\n            }}\n          >\n            submit\n          </Button>\n          <Button\n            onClick={() => {\n              setShowAddEntry(false);\n            }}\n          >\n            cancel\n          </Button>\n        </div>\n      ) : (\n        <Button onClick={() => setShowAddEntry(true)}>+ add item</Button>\n      )}\n      <Button onClick={() => setIsLoading(true)}>Refresh</Button>\n      <hr />\n    </div>\n  );\n};\nexport default CryptoTracker;\n","import { Grid, Radio, RadioGroup, Typography, FormControlLabel } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nconst Countdown = () => {\n  const timings: any = {\n    lse_close: Date.UTC(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate(),\n      15,\n      30,\n      0\n    ),\n    lse_open: Date.UTC(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate(),\n      7,\n      0,\n      0\n    ),\n    nyse_open: Date.UTC(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate(),\n      13,\n      30,\n      0\n    ),\n    nyse_close: Date.UTC(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate(),\n      20,\n      0,\n      0\n    ),\n  };\n\n  function timeleft(endDate: any) {\n    endDate = new Date(endDate);\n    let difference = endDate - +new Date();\n    let timeLeft = {};\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n    return timeLeft;\n  }\n  const [radioSelect, setRadioSelect] = useState('lse_open');\n  const [remainingTime, setRemainingTime] = useState(timeleft(timings[radioSelect])) as any;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setRemainingTime(timeleft(timings[radioSelect]));\n    }, 1000);\n  });\n\n  function displayTimer() {\n    if (Object.keys(remainingTime).length === 0) {\n      return <Typography>The market is {radioSelect.split('_')[1]}.</Typography>;\n    } else {\n      return (\n        <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\" spacing={1}>\n          <Grid item>\n            <Typography>{remainingTime.hours}H</Typography>\n          </Grid>\n          <Grid item>\n            <Typography>{remainingTime.minutes}M</Typography>\n          </Grid>\n          <Grid item>\n            <Typography>{remainingTime.seconds}S</Typography>\n          </Grid>\n        </Grid>\n      );\n    }\n  }\n\n  return (\n    <div style={{ textAlign: 'center', margin: \"2% 0\" }}>\n      <RadioGroup\n        value={radioSelect}\n        onChange={(event) => setRadioSelect(event.target.value)}\n        defaultValue=\"lse_open\"\n      >\n        <Grid container direction=\"row\" justify=\"center\">\n          {[\n            { value: 'lse_open', name: 'LSE Opening' },\n            { value: 'lse_close', name: 'LSE Closing' },\n            { value: 'nyse_open', name: 'NYSE Opening' },\n            { value: 'nyse_close', name: 'NYSE Closing' },\n          ].map((row) => {\n            return (\n              <Grid item xs={6} sm={3}>\n                <FormControlLabel\n                  value={row.value}\n                  label={row.name}\n                  control={<Radio />}\n                />\n              </Grid>\n            );\n          })}\n        </Grid>\n      </RadioGroup>\n\n      <div style={{ margin: 'auto' }}>{displayTimer()}</div>\n    </div>\n  );\n};\n\nexport default Countdown;\n","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport BoringTracker from './BoringTracker';\nimport CryptoTracker from './CryptoTracker';\nimport Countdown from './Countdown';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: { margin: '0 0% 0 0%' },\n  };\n});\n\nconst AssetTracker = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CryptoTracker />\n      <Countdown />\n      <BoringTracker />\n    </div>\n  );\n};\n\nexport default AssetTracker;\n","import React from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: { display: 'flex', justifyContent: 'center', alignItems: 'center' },\n    main: {\n      position: 'absolute',\n      borderRadius: '10px',\n      padding: '0 0 20px 0',\n      width: '50vw',\n      backgroundColor: 'black',\n      color: '#39ff14',\n    },\n    headerButtons: {\n      borderRadius: '50%',\n      width: '20px',\n      height: '20px',\n      margin: '5px 0 5px 10px',\n      border: '1 solid white',\n    },\n    inputField: {\n      background: 'transparent',\n      border: 'none',\n      color: '#39ff14',\n      marginLeft: '10px',\n      width: '90%',\n    },\n    minimise: {\n      padding: '10px',\n      width: '20vw',\n      textAlign: 'center',\n      backgroundColor: 'black',\n      color: 'white',\n      position: 'fixed',\n      bottom: 0,\n      cursor: 'pointer',\n    },\n    header: {\n      marginBottom: '30px',\n      backgroundColor: 'grey',\n      width: '100%',\n      height: '100%',\n      borderRadius: '10px 10px 0 0',\n    },\n  };\n});\n\nconst Terminal = () => {\n  const [isMinimised, setIsMinimised] = React.useState(false);\n  const [history, setHistory] = React.useState<string[]>([]);\n  const [command, setCommand] = React.useState('');\n  const [state, setState] = React.useState({\n    isDragging: false,\n    origin: { x: 0, y: 0 },\n    translation: { x: window.innerWidth / 3, y: window.innerHeight / 1.3 },\n    lastTranslation: { x: window.innerWidth / 3, y: window.innerHeight / 1.3 },\n  });\n  let browserHistory = useHistory();\n\n  const { isDragging } = state;\n  const handleMouseDown = ({ clientX, clientY }: any) => {\n    if (!isDragging)\n      setState({\n        ...state,\n        isDragging: true,\n        origin: { x: clientX, y: clientY },\n      });\n  };\n\n  const handleMouseMove = ({ clientX, clientY }: any) => {\n    if (isDragging) {\n      const { origin, lastTranslation } = state;\n      setState({\n        ...state,\n        translation: {\n          x: Math.abs(clientX - (origin.x + lastTranslation.x)),\n          y: Math.abs(clientY - (origin.y + lastTranslation.y)),\n        },\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    if (isDragging) {\n      const { translation } = state;\n      setState({\n        ...state,\n        isDragging: false,\n        lastTranslation: { x: translation.x, y: translation.y },\n      });\n    }\n    console.log(state);\n  };\n\n  const handleEnter = (event: any) => {\n    if (event.key === 'Enter') {\n      let res = '';\n      switch (command) {\n        case 'linkedin':\n          window.open('/linkedin', '_blank');\n          res = 'sending you to linkedin now...';\n          break;\n        case 'github':\n          window.open('/github', '_blank');\n          res = 'sending you to github now...';\n          break;\n        default:\n          res = `${command} is not a valid command, type help for options.`;\n      }\n      let tmp = history;\n      tmp.push('> ' + command);\n      tmp.push(res);\n      setHistory(tmp);\n      setCommand('');\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {isMinimised ? (\n        <Paper\n          className={classes.minimise}\n          onClick={() => {\n            setIsMinimised(false);\n          }}\n        >\n          TERMINAL\n        </Paper>\n      ) : (\n        <Paper\n          className={classes.main}\n          elevation={3}\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseLeave={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          style={{\n            right: `${state.translation.x}px`,\n            bottom: `${state.translation.y}px`,\n          }}\n        >\n          <div className={classes.header}>\n            <button\n              className={classes.headerButtons}\n              style={{ backgroundColor: 'red' }}\n              onClick={() => {\n                alert('Now why would you want to close my lovely creation?');\n                setHistory([]);\n                setIsMinimised(true);\n              }}\n            ></button>\n            <button\n              className={classes.headerButtons}\n              style={{ backgroundColor: 'yellow' }}\n              onClick={() => setIsMinimised(true)}\n            ></button>\n            <button\n              className={classes.headerButtons}\n              style={{ backgroundColor: 'green' }}\n              onClick={() => alert('ARE YOU TRYING TO KILL ME WITH CSS?????????')}\n            ></button>\n          </div>\n          <div>\n            {history.map((row: string) => {\n              return <Typography>{row}</Typography>;\n            })}\n          </div>\n          <input\n            className={classes.inputField}\n            onChange={(event) => {\n              setCommand(event.target.value);\n            }}\n            value={command}\n            onKeyDown={handleEnter}\n          ></input>\n        </Paper>\n      )}\n    </div>\n  );\n};\n\nexport default Terminal;\n","import React from 'react';\nimport ContactMe from './ContactMe';\nimport AboutMe from './AboutMe';\nimport SideBar from './SideBar';\nimport AssetTracker from './AssetTracker/AssetTracker';\nimport CallIcon from '@material-ui/icons/Call';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Terminal from './Terminal';\nimport CodeIcon from '@material-ui/icons/Code';\n\nconst Pages = [\n  {\n    name: 'About Me',\n    link: '/about-me',\n    component: AboutMe,\n    icon: <AccountCircleIcon />,\n  },\n  { name: 'Contact Me', link: '/contact-me', component: ContactMe, icon: <CallIcon /> },\n  {\n    name: 'Asset Tracker',\n    link: '/tracker',\n    component: AssetTracker,\n    icon: <TrendingUpIcon />,\n  },\n  {\n    name: 'Terminal',\n    link: '/terminal',\n    component: Terminal,\n    icon: <CodeIcon />,\n  },\n  {\n    link: '/linkedin',\n    href: 'https://www.linkedin.com/in/shrmnl/',\n  },\n  {\n    link: '/github',\n    href: 'https://github.com/shermanleejm',\n  },\n];\n\nexport { ContactMe, AboutMe, SideBar, Pages, AssetTracker };\n","import React from 'react';\nimport { HashRouter, Switch, Route, Redirect, BrowserRouter } from 'react-router-dom';\nimport { SideBar, Pages } from './components';\n\nconst App = () => {\n  return (\n    <div>\n      <BrowserRouter basename={'/'}>\n        <SideBar />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return localStorage.getItem('homepage') === null ||\n                localStorage.getItem('homepage') === '' ? (\n                <Redirect to=\"/about-me\" />\n              ) : (\n                <Redirect to={localStorage.getItem('homepage')} />\n              );\n            }}\n          />\n          {Pages.map((page) => {\n            if (page.component !== undefined) {\n              return <Route exact path={page.link} component={page.component} />;\n            } else {\n              return (\n                <Route\n                  path={page.link}\n                  component={() => {\n                    window.location.href = page.href;\n                    return null;\n                  }}\n                />\n              );\n            }\n          })}\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />,document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}