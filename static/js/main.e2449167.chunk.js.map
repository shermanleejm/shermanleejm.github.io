{"version":3,"sources":["components/ContactMe.js","img/pp.png","img/Resume.pdf","components/AboutMe.js","components/SideBar.js","components/AssetTracker/BoringTracker.js","components/AssetTracker/CryptoTracker.js","components/AssetTracker/Countdown.js","components/AssetTracker/AssetTracker.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["ContactMe","props","state","formSubmitted","name","email","contactNumber","message","fetch","this","setState","style","width","padding","margin","height","Typography","variant","id","enctype","action","target","onsubmit","Grid","container","direction","spacing","item","Link","href","color","TextField","type","label","onChange","event","value","fullWidth","multiline","rows","onClick","handleSubmit","border","backgroundColor","fontSize","textTransform","cursor","display","onload","Component","useStyles","makeStyles","theme","header","textAlign","marginBottom","borderRadius","marginTop","image","window","innerWidth","imagecontainer","justifyContent","icons","transform","maintext","root","AboutMe","classes","className","src","pp","Button","rel","Pdf","to","component","MUILink","SideBar","useState","isOpen","setIsOpen","reload","setReload","useEffect","localStorage","getItem","IconButton","SwipeableDrawer","anchor","open","onClose","onOpen","List","Pages","map","page","ListItem","button","link","ListItemIcon","children","icon","ListItemText","primary","Switch","checked","location","split","setItem","apiinput","table","searchresult","BoringTracker","isLoading","setIsLoading","apiKey","setAPIKey","keyword","setKeyword","showSearchResults","setShowSearchResults","searchResults","setSearchResults","showForm","setShowForm","formStuff","setFormStuff","formQuantity","setFormQuantity","formPrice","setFormPrice","boringData","setBoringData","errorMessage","setErrorMessage","refresh","setRefresh","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","kw","a","axios","get","then","resp","data","bestMatches","calculatePL","starting","end","line","quantity","price","parseFloat","toFixed","getPrice","ticker","result","JSON","parse","undefined","tickerData","high","low","pl","stringify","console","log","fetchLocalData","size","e","disabled","queryTicker","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","index","symbol","region","Paper","elevation","xs","step","newData","push","splice","combobox","overflowY","arrangeHorizontally","CryptoTracker","setCurrencies","cryptoCurrencies","setCryptoCurrencies","selectCurrency","cryptoData","setCryptoData","showAddEntry","setShowAddEntry","formCrypto","setFormCrypto","formValue","setFormValue","formPrincipal","setFormPrincipal","crypto","principal","editValuesIndex","setEditValuesIndex","calculateNetProfit","total","displayPrincipal","toLocaleString","maximumFractionDigits","getCurrentPrice","fiat","amount","fetchCurrency","tempcurrencies","c","fetchCryptoCurrency","fiatCurrencies","Object","keys","rates","includes","fetchStoredValues","temp","currPrice","currentPrice","setTimeout","EditValuesButtons","colSpan","customInput","onValueChange","values","floatValue","prefix","paddingRight","Autocomplete","options","renderInput","params","Countdown","timings","lse_close","Date","UTC","getFullYear","getMonth","getDate","lse_open","nyse_open","nyse_close","timeleft","endDate","difference","timeLeft","days","hours","minutes","seconds","radioSelect","setRadioSelect","remainingTime","setRemainingTime","RadioGroup","defaultValue","justify","sm","FormControlLabel","control","Radio","alignItems","AssetTracker","App","basename","exact","path","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e2449167.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Paper,\n  TextField,\n  Grid,\n  Typography,\n  Button,\n  Link,\n  makeStyles,\n} from \"@material-ui/core\";\n\nclass ContactMe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formSubmitted: false,\n      name: \"\",\n      email: \"\",\n      contactNumber: \"\",\n      message: \"\",\n    };\n  }\n\n  handleSubmit() {\n    fetch(\n      \"https://docs.google.com/forms/d/e/1FAIpQLSeRk58rRnbE1XDd_6RZ6i9RIPTDPZT9YgsQ_4B7-Ff0mqQE3w/formResponse?usp=pp_url&entry.963742205=\" +\n        this.state.name +\n        \"&entry.1053435119=\" +\n        this.state.email +\n        \"&entry.1110637641=\" +\n        this.state.contactNumber +\n        \"&entry.63678808=\" +\n        this.state.message\n    );\n    this.setState({\n      formSubmitted: true,\n    });\n  }\n\n  render() {\n    if (this.state.formSubmitted) {\n      return (\n        <div style={{ width: \"80vw\", padding: 20, margin: \"auto\", height:\"100vh\" }}>\n          <Typography variant=\"h4\">\n            Thank you for your submission I will get back to you as soon as\n            possible!\n          </Typography>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          style={{ height: \"100vh\", width: \"90vw\", padding: 20, margin: \"auto\" }}\n        >\n          <form\n            name=\"gform\"\n            id=\"gform\"\n            enctype=\"text/plain\"\n            action=\"https://docs.google.com/forms/d/e/1FAIpQLSeRk58rRnbE1XDd_6RZ6i9RIPTDPZT9YgsQ_4B7-Ff0mqQE3w/formResponse?\"\n            target=\"hidden_iframe\"\n            onsubmit=\"submitted=true;\"\n          >\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <Typography variant=\"h5\">\n                  You may contact me at +65 86601996 and at{\" \"}\n                  <Link href=\"mailto:leesherman@live.com.sg\" color=\"secondary\">\n                    leesherman@live.com.sg\n                  </Link>\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\">\n                  Alternatively, you may fill in the form below and I shall get\n                  back to you as soon as possible.\n                </Typography>\n              </Grid>\n              <Grid item>\n                <TextField\n                  color=\"secondary\"\n                  type=\"text\"\n                  name=\"entry.963742205\"\n                  id=\"entry.963742205\"\n                  label=\"Name\"\n                  onChange={(event) => {\n                    this.setState({ name: event.target.value });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  color=\"secondary\"\n                  type=\"text\"\n                  name=\"entry.1053435119\"\n                  id=\"entry.1053435119\"\n                  label=\"Email\"\n                  onChange={(event) => {\n                    this.setState({ email: event.target.value });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  color=\"secondary\"\n                  type=\"text\"\n                  name=\"entry.1110637641\"\n                  id=\"entry.1110637641\"\n                  label=\"Contact Number\"\n                  onChange={(event) => {\n                    this.setState({ contactNumber: event.target.value });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  color=\"secondary\"\n                  type=\"text\"\n                  name=\"entry.63678808\"\n                  id=\"entry.63678808\"\n                  label=\"Message\"\n                  onChange={(event) => {\n                    this.setState({ message: event.target.value });\n                  }}\n                  fullWidth\n                  multiline\n                  rows={4}\n                />\n              </Grid>\n              <Grid item>\n                <input\n                  id=\"popUp\"\n                  type=\"submit\"\n                  value=\"submit\"\n                  onClick={() => this.handleSubmit()}\n                  style={{\n                    border: \"none\",\n                    backgroundColor: \"#ffffff\",\n                    fontSize: \"15px\",\n                    textTransform: \"uppercase\",\n                    cursor: \"pointer\",\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </form>\n          {/* <Button\n            onClick={() => {\n              console.log(this.state);\n            }}\n          >\n            Check values\n          </Button> */}\n          <iframe\n            name=\"hidden_iframe\"\n            id=\"hidden_iframe\"\n            style={{ display: \"none\" }}\n            onload=\"if(submitted) {}\"\n          ></iframe>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ContactMe;\n// https://docs.google.com/forms/d/e/1FAIpQLSeRk58rRnbE1XDd_6RZ6i9RIPTDPZT9YgsQ_4B7-Ff0mqQE3w/viewform?usp=pp_url&entry.963742205=Sherman&entry.1053435119=leesherman@live.com.sg&entry.1110637641=86601996&entry.63678808=you+rock!\n// https://docs.google.com/forms/d/e/1FAIpQLSeRk58rRnbE1XDd_6RZ6i9RIPTDPZT9YgsQ_4B7-Ff0mqQE3w/formResponse?usp=pp_url&entry.963742205=Name&entry.1053435119=Email&entry.1110637641=Mobile+Number&entry.63678808=Question\n","export default __webpack_public_path__ + \"static/media/pp.d83a0ba8.png\";","export default __webpack_public_path__ + \"static/media/Resume.5f132bec.pdf\";","import { Grid, makeStyles, Typography, Button, Link as MUILink } from '@material-ui/core';\nimport React from 'react';\nimport pp from '../img/pp.png';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport Pdf from '../img/Resume.pdf';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    header: { textAlign: 'center', marginBottom: theme.spacing(4) },\n    item: {\n      width: '100%',\n      textAlign: 'center',\n      borderRadius: '5px',\n      marginTop: '10px',\n    },\n    image: {\n      width: window.innerWidth < 600 ? '90%' : '60%',\n      height: 'auto',\n    },\n    imagecontainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginBottom: theme.spacing(3),\n    },\n    icons: { transform: 'scale(2)' },\n    maintext: { width: '90%', margin: '5% auto 0 auto', textAlign: 'center' },\n    root: { marginBottom: '20%', width: '100vw' },\n  };\n});\n\nconst AboutMe = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\" className={classes.header}>\n        Welcome to my developer profile.\n      </Typography>\n      <div className={classes.imagecontainer}>\n        <img src={pp} className={classes.image} />\n      </div>\n      <div className={classes.imagecontainer}>\n        <Button href=\"https://github.com/shermanleejm\" target=\"_blank\" rel=\"noopener\">\n          <GitHubIcon className={classes.icons} />\n        </Button>\n        <Button href=\"https://www.linkedin.com/in/shrmnl/\" target=\"_blank\" rel=\"noopener\">\n          <LinkedInIcon className={classes.icons} />\n        </Button>\n        <Button href={Pdf} target=\"_blank\" rel=\"noopener\">\n          <MenuBookIcon className={classes.icons} />\n        </Button>\n      </div>\n      <div className={classes.maintext}>\n        <Typography>\n          I make stuff. I have an asset tracker that you can play with{' '}\n          <Link to=\"/tracker\" component={MUILink}>\n            here\n          </Link>\n          .\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutMe;\n","import {\n  ListItem,\n  List,\n  SwipeableDrawer,\n  IconButton,\n  ListItemText,\n  ListItemIcon,\n  Switch,\n  makeStyles,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Pages } from './index';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n  };\n});\n\nconst SideBar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [reload, setReload] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    localStorage.getItem('homepage');\n  }, [reload]);\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={() => setIsOpen(true)}>\n        <MenuIcon />\n      </IconButton>\n      <SwipeableDrawer\n        anchor=\"left\"\n        open={isOpen}\n        onClose={() => setIsOpen(false)}\n        onOpen={() => {\n          setIsOpen(true);\n        }}\n      >\n        <List>\n          {Pages.map((page) => {\n            return (\n              <ListItem\n                button\n                key={page.name}\n                component={Link}\n                to={page.link}\n                onClick={() => setIsOpen(false)}\n              >\n                <ListItemIcon children={page.icon} />\n                <ListItemText primary={page.name} />\n              </ListItem>\n            );\n          })}\n        </List>\n      </SwipeableDrawer>\n      <span>\n        set as homepage{' '}\n        <Switch\n          checked={\n            localStorage.getItem('homepage') === window.location.href.split('#')[1]\n          }\n          onChange={() => {\n            if (localStorage.getItem('homepage') === window.location.href.split('#')[1]) {\n              localStorage.setItem('homepage', '');\n            } else {\n              localStorage.setItem('homepage', window.location.href.split('#')[1]);\n            }\n            setReload(!reload);\n          }}\n        />\n      </span>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import {\n  Button,\n  makeStyles,\n  TextField,\n  Typography,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  IconButton,\n  Grid,\n  Paper,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    header: { margin: '3% 0 3% 0' },\n    root: { margin: '0 4% 10% 4%' },\n    apiinput: { width: '60%', margin: '0 0 3% 0' },\n    table: { margin: '0 0 3% 0' },\n    searchresult: { padding: '4%', marginBottom: '4%' },\n  };\n});\n\nconst BoringTracker = () => {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(true);\n  const [apiKey, setAPIKey] = useState();\n  const [keyword, setKeyword] = useState();\n  const [showSearchResults, setShowSearchResults] = useState();\n  const [searchResults, setSearchResults] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [formStuff, setFormStuff] = useState();\n  const [formQuantity, setFormQuantity] = useState();\n  const [formPrice, setFormPrice] = useState('');\n  const [boringData, setBoringData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState();\n  const [refresh, setRefresh] = useState(false);\n\n  function shuffle(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  useEffect(() => {\n    async function getPrice(ticker) {\n      let result = {};\n      await axios\n        .get(\n          `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${ticker}&apikey=${apiKey}`\n        )\n        .then((resp) => {\n          result = resp.data['Global Quote'];\n        });\n      return result;\n    }\n\n    async function fetchLocalData() {\n      let item = JSON.parse(localStorage.getItem('apikey'));\n      if (item) {\n        setAPIKey(item);\n      } else {\n        setAPIKey('1111111');\n      }\n      item = JSON.parse(localStorage.getItem('boring'));\n      if (item) {\n        for (let line of item) {\n          let tickerData = await getPrice(line.ticker);\n          if (tickerData === undefined) {\n            setErrorMessage('Alpha Vantage only allows 5 requests every minute.');\n            setIsLoading(false);\n            return;\n          }\n          line.high = parseFloat(tickerData['03. high']);\n          line.low = parseFloat(tickerData['04. low']);\n          line.open = parseFloat(tickerData['02. open']);\n          line.pl = parseFloat(\n            (((tickerData['02. open'] - line.price) / line.price) * 100).toFixed(2)\n          );\n        }\n        localStorage.setItem('boring', JSON.stringify(shuffle(item)));\n        setBoringData(item);\n      }\n\n      setErrorMessage(undefined);\n      setIsLoading(false);\n    }\n    console.log('calling useEffect on Boring Tracker');\n    fetchLocalData();\n  }, [refresh]);\n\n  async function queryTicker(kw) {\n    await axios\n      .get(\n        `https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${kw}&apikey=${apiKey}`\n      )\n      .then((resp) => {\n        setSearchResults(resp.data.bestMatches);\n      });\n  }\n\n  function calculatePL() {\n    let starting = 0;\n    let end = 0;\n    for (let line of boringData) {\n      starting += line.quantity * line.price;\n      end += line.quantity * line.open;\n    }\n    return parseFloat((((end - starting) / starting) * 100).toFixed(2));\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography style={{ color: 'red' }}>\n        {errorMessage !== undefined && errorMessage}\n      </Typography>\n\n      <Typography variant=\"h4\" className={classes.header}>\n        Boring{' '}\n        <span style={{ color: calculatePL() > 0 ? 'green' : 'red' }}>\n          {calculatePL() > 0 && '+'}\n          {calculatePL()}%\n        </span>\n      </Typography>\n\n      <TextField\n        label=\"Alpha Vantage API key\"\n        size=\"small\"\n        value={apiKey}\n        onChange={(e) => setAPIKey(e.target.value)}\n        className={classes.apiinput}\n      />\n      <Button\n        onClick={() => {\n          localStorage.setItem('apikey', JSON.stringify(apiKey));\n        }}\n      >\n        save api key\n      </Button>\n\n      <TextField\n        label=\"Add new boring equity\"\n        size=\"small\"\n        value={keyword}\n        onChange={(e) => setKeyword(e.target.value)}\n        className={classes.apiinput}\n      />\n      <Button\n        disabled={!keyword}\n        onClick={() => {\n          queryTicker(keyword);\n          setShowSearchResults(true);\n        }}\n      >\n        search\n      </Button>\n\n      {showSearchResults && keyword !== '' && (\n        <TableContainer className={classes.table}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Symbol</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Type</TableCell>\n                <TableCell>Region</TableCell>\n                <TableCell>Correct?</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {searchResults.map((row, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>{row['1. symbol']}</TableCell>\n                    <TableCell>{row['2. name']}</TableCell>\n                    <TableCell>{row['3. type']}</TableCell>\n                    <TableCell>{row['4. region']}</TableCell>\n                    <TableCell>\n                      <IconButton\n                        onClick={() => {\n                          setFormStuff({\n                            symbol: row['1. symbol'],\n                            name: row['2. name'],\n                            type: row['3. type'],\n                            region: row['4. region'],\n                          });\n                          setShowForm(true);\n                          setShowSearchResults(false);\n                        }}\n                      >\n                        <CheckIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n\n      {showForm && (\n        <Paper className={classes.searchresult} elevation={3}>\n          <Grid container spacing={3}>\n            <Grid item xs={4}>\n              Symbol: {formStuff.symbol}\n            </Grid>\n            <Grid item xs={8}>\n              Name: {formStuff.name}\n            </Grid>\n            <Grid item xs={4}>\n              Type: {formStuff.type}\n            </Grid>\n            <Grid item xs={8}>\n              Region: {formStuff.region}\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                label=\"Quantity\"\n                type=\"number\"\n                step={0.001}\n                value={formQuantity}\n                onChange={(e) => {\n                  setFormQuantity(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                label=\"Price\"\n                type=\"number\"\n                step={0.001}\n                value={formPrice}\n                onChange={(e) => {\n                  setFormPrice(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                fullWidth\n                onClick={() => {\n                  let newData = {\n                    ticker: formStuff.symbol,\n                    quantity: formQuantity,\n                    price: formPrice,\n                  };\n                  boringData.push(newData);\n                  localStorage.setItem('boring', JSON.stringify(shuffle(boringData)));\n                  setShowForm(false);\n                }}\n              >\n                submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      )}\n\n      {!isLoading && (\n        <TableContainer className={classes.table}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Ticker</TableCell>\n                <TableCell>Quantity</TableCell>\n                <TableCell>Cost</TableCell>\n                <TableCell>Open</TableCell>\n                <TableCell>High</TableCell>\n                <TableCell>Low</TableCell>\n                <TableCell>P/L (%)</TableCell>\n                <TableCell>Delete</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {boringData.map((row, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>{row.ticker}</TableCell>\n                    <TableCell>{row.quantity}</TableCell>\n                    <TableCell>{row.price}</TableCell>\n                    <TableCell>{row.open}</TableCell>\n                    <TableCell>{row.high}</TableCell>\n                    <TableCell>{row.low}</TableCell>\n                    <TableCell style={{ color: row.pl > 0 ? 'green' : 'red' }}>\n                      {row.pl > 0 && '+'}\n                      {row.pl}\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        onClick={() => {\n                          boringData.splice(index, 1);\n                          localStorage.setItem(\n                            'boring',\n                            JSON.stringify(shuffle(boringData))\n                          );\n                          setIsLoading(true);\n                        }}\n                      >\n                        <DeleteForeverIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n      <Button\n        onClick={() => {\n          setRefresh(!refresh);\n          setBoringData(shuffle(boringData));\n        }}\n      >\n        refresh\n      </Button>\n    </div>\n  );\n};\n\nexport default BoringTracker;\n","import {\n  makeStyles,\n  TextField,\n  Typography,\n  Button,\n  IconButton,\n  TableHead,\n  Table,\n  TableRow,\n  TableCell,\n  TableContainer,\n  TableBody,\n} from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport axios from 'axios';\nimport NumberFormat from 'react-number-format';\nimport React, { useState, useEffect } from 'react';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: { margin: '0 4% 0 4%' },\n    combobox: { padding: '3% 0 3% 0' },\n    header: { margin: '0 0 1% 0' },\n    table: { overflowY: 'scroll' },\n    arrangeHorizontally: { display: 'inline-block', textAlign: 'center' },\n  };\n});\n\nconst CryptoTracker = () => {\n  const classes = useStyles();\n  const [currencies, setCurrencies] = useState([]);\n  const [cryptoCurrencies, setCryptoCurrencies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectCurrency, setSelectCurrency] = useState('SGD');\n  const [cryptoData, setCryptoData] = useState([]);\n  const [showAddEntry, setShowAddEntry] = useState(false);\n  const [formCrypto, setFormCrypto] = useState();\n  const [formValue, setFormValue] = useState();\n  const [formPrincipal, setFormPrincipal] = useState();\n  const [editValuesIndex, setEditValuesIndex] = useState({\n    crypto: -1,\n    quantity: -1,\n    principal: -1,\n  });\n\n  useEffect(() => {\n    // get current sell price\n    async function getCurrentPrice(crypto, fiat) {\n      let result = 0;\n      await axios\n        .get(`https://api.coinbase.com/v2/prices/${crypto}-${fiat}/sell`)\n        .then((resp) => {\n          result = parseFloat(resp.data.data.amount);\n        });\n      return result;\n    }\n\n    // get currencies\n    async function fetchCurrency() {\n      let result = [];\n      await axios.get('https://api.coinbase.com/v2/currencies').then((resp) => {\n        let tempcurrencies = [];\n        for (let c of resp.data.data) {\n          tempcurrencies.push(c.id);\n        }\n        result = tempcurrencies;\n        setCurrencies(tempcurrencies);\n      });\n      return result;\n    }\n\n    async function fetchCryptoCurrency(fiatCurrencies) {\n      let result = [];\n      await axios\n        .get('https://api.coinbase.com/v2/exchange-rates?currency=BTC')\n        .then((resp) => {\n          Object.keys(resp.data.data.rates).map((item) => {\n            if (!fiatCurrencies.includes(item)) {\n              result.push(item);\n            }\n          });\n          setCryptoCurrencies(result);\n        });\n    }\n\n    // get stored values\n    async function fetchStoredValues() {\n      let x = await fetchCurrency();\n      fetchCryptoCurrency(x);\n\n      let temp = JSON.parse(localStorage.getItem('crypto'));\n      if (temp) {\n        for (let line of temp) {\n          let currPrice = await getCurrentPrice(line.name, selectCurrency);\n          line.pl = parseFloat(\n            (((currPrice * line.value - line.principal) / line.principal) * 100).toFixed(\n              2\n            )\n          );\n          line.currentPrice = currPrice;\n        }\n      } else {\n        temp = [];\n      }\n\n      setCryptoData(temp);\n      localStorage.setItem('crypto', JSON.stringify(temp));\n      setIsLoading(false);\n    }\n\n    setTimeout(() => {\n      fetchStoredValues();\n    }, 60000);\n\n    fetchStoredValues();\n  }, [isLoading]);\n\n  function calculateNetProfit() {\n    let total = 0;\n    let pl = 0;\n    for (let line of cryptoData) {\n      pl += (line.principal * line.pl) / 100;\n      total += line.principal;\n    }\n    return ((pl / total) * 100).toFixed(2);\n  }\n\n  function displayPrincipal(principal) {\n    principal = principal.toLocaleString(undefined, { maximumFractionDigits: 2 });\n    return principal;\n  }\n\n  const EditValuesButtons = () => {\n    return (\n      <span className={classes.arrangeHorizontally}>\n        <IconButton\n          onClick={() => {\n            setEditValuesIndex({\n              crypto: -1,\n              quantity: -1,\n              principal: -1,\n            });\n            localStorage.setItem('crypto', JSON.stringify(cryptoData));\n            setIsLoading(true);\n          }}\n        >\n          <CheckCircleIcon />\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            setEditValuesIndex({\n              crypto: -1,\n              quantity: -1,\n              principal: -1,\n            });\n          }}\n        >\n          <CancelIcon />\n        </IconButton>\n      </span>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" className={classes.header}>\n        Crypto {'  '}\n        <span style={{ color: calculateNetProfit() > 0 ? 'green' : 'red' }}>\n          {calculateNetProfit() > 0 ? '+' : ''}\n          {calculateNetProfit()}%\n        </span>\n      </Typography>\n\n      {/* <Autocomplete\n        className={classes.combobox}\n        options={currencies}\n        defaultValue=\"SGD\"\n        renderInput={(params) => (\n          <TextField {...params} variant=\"outlined\" label=\"Select Currency\" />\n        )}\n        onChange={(e, value) => {\n          setSelectCurrency(value);\n          setIsLoading(true);\n        }}\n      /> */}\n\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                <Typography>Currency (Current Price)</Typography>\n              </TableCell>\n              <TableCell colSpan={editValuesIndex.quantity !== -1 ? 3 : 1}>\n                <Typography>Quantity</Typography>\n              </TableCell>\n              <TableCell colSpan={editValuesIndex.principal !== -1 ? 3 : 1}>\n                <Typography>Principal</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography>Current</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography>Profit/Loss (%)</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography>Delete</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {!isLoading &&\n              cryptoData.map((crypto, index) => {\n                return (\n                  <TableRow>\n                    <TableCell>\n                      {`${crypto.name} (${selectCurrency}${displayPrincipal(\n                        crypto.currentPrice\n                      )})`}\n                    </TableCell>\n                    <TableCell colSpan={editValuesIndex.quantity !== -1 ? 3 : 1}>\n                      {editValuesIndex.quantity === index ? (\n                        <div style={{ width: '30vw' }}>\n                          <NumberFormat\n                            customInput={TextField}\n                            value={crypto.value}\n                            onValueChange={(values) => {\n                              let { floatValue } = values;\n                              let temp = cryptoData;\n                              temp[index].value = floatValue;\n                              setCryptoData(temp);\n                            }}\n                          />\n                          <EditValuesButtons />\n                        </div>\n                      ) : (\n                        <Typography\n                          onClick={() => {\n                            setFormValue(crypto.value);\n                            setEditValuesIndex({\n                              crypto: -1,\n                              quantity: index,\n                              principal: -1,\n                            });\n                          }}\n                        >\n                          {crypto.value}\n                        </Typography>\n                      )}\n                    </TableCell>\n                    <TableCell colSpan={editValuesIndex.principal !== -1 ? 3 : 1}>\n                      {editValuesIndex.principal === index ? (\n                        <div style={{ width: '30vw' }}>\n                          <NumberFormat\n                            customInput={TextField}\n                            prefix={selectCurrency}\n                            value={crypto.principal}\n                            onValueChange={(values) => {\n                              let { floatValue } = values;\n                              let temp = cryptoData;\n                              temp[index].principal = floatValue;\n                              setCryptoData(temp);\n                            }}\n                          />\n\n                          <span className={classes.arrangeHorizontally}>\n                            <IconButton\n                              onClick={() => {\n                                setEditValuesIndex({\n                                  crypto: -1,\n                                  quantity: -1,\n                                  principal: -1,\n                                });\n                                localStorage.setItem(\n                                  'crypto',\n                                  JSON.stringify(cryptoData)\n                                );\n                                setIsLoading(true);\n                              }}\n                            >\n                              <CheckCircleIcon />\n                            </IconButton>\n                            <IconButton\n                              onClick={() => {\n                                setEditValuesIndex({\n                                  crypto: -1,\n                                  quantity: -1,\n                                  principal: -1,\n                                });\n                              }}\n                            >\n                              <CancelIcon />\n                            </IconButton>\n                          </span>\n                        </div>\n                      ) : (\n                        <Typography\n                          onClick={() => {\n                            setEditValuesIndex({\n                              crypto: -1,\n                              principal: index,\n                              quantity: -1,\n                            });\n                            setFormPrincipal(crypto.principal);\n                          }}\n                        >\n                          {selectCurrency}\n                          {displayPrincipal(crypto.principal)}\n                        </Typography>\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      <Typography>\n                        {selectCurrency}\n                        {(\n                          parseFloat(crypto.currentPrice) * parseFloat(crypto.value)\n                        ).toLocaleString(undefined, { maximumFractionDigits: 2 })}\n                      </Typography>\n                    </TableCell>\n                    <TableCell style={{ color: crypto.pl > 0 ? 'green' : 'red' }}>\n                      <Typography>\n                        {crypto.pl > 0 && '+'}\n                        {crypto.pl || ''}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        onClick={() => {\n                          cryptoData.splice(index, 1);\n                          localStorage.setItem('crypto', JSON.stringify(cryptoData));\n                          setIsLoading(true);\n                        }}\n                      >\n                        <DeleteForeverIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            {showAddEntry && (\n              <TableRow>\n                <TableCell style={{ paddingRight: '5%' }}>\n                  <Autocomplete\n                    className={classes.combobox}\n                    options={cryptoCurrencies}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"outlined\"\n                        label=\"Crypto\"\n                        size=\"small\"\n                      />\n                    )}\n                    onChange={(e, value) => setFormCrypto(value)}\n                  />\n                </TableCell>\n                <TableCell>\n                  <NumberFormat\n                    style={{ width: '25vw' }}\n                    customInput={TextField}\n                    value={formValue}\n                    onValueChange={(values) => {\n                      let { floatValue } = values;\n                      setFormValue(floatValue);\n                    }}\n                  />\n                </TableCell>\n                <TableCell>\n                  <NumberFormat\n                    style={{ width: '25vw' }}\n                    customInput={TextField}\n                    prefix={selectCurrency}\n                    value={formPrincipal}\n                    onValueChange={(values) => {\n                      let { floatValue } = values;\n                      setFormPrincipal(floatValue);\n                    }}\n                  />\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {showAddEntry ? (\n        <>\n          <Button\n            onClick={() => {\n              if (\n                formCrypto !== undefined &&\n                formPrincipal !== undefined &&\n                formValue !== undefined\n              ) {\n                cryptoData.push({\n                  name: formCrypto,\n                  value: formValue,\n                  principal: formPrincipal,\n                });\n                localStorage.setItem('crypto', JSON.stringify(cryptoData));\n                setIsLoading(true);\n              }\n              setShowAddEntry(false);\n            }}\n          >\n            submit\n          </Button>\n          <Button\n            onClick={() => {\n              setShowAddEntry(false);\n            }}\n          >\n            cancel\n          </Button>\n        </>\n      ) : (\n        <Button onClick={() => setShowAddEntry(true)}>+ add item</Button>\n      )}\n      <Button onClick={() => setIsLoading(true)}>Refresh</Button>\n      <hr />\n    </div>\n  );\n};\n\nexport default CryptoTracker;\n","import { Grid, Radio, RadioGroup, Typography, FormControlLabel } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nconst Countdown = (props) => {\n  const timings = {\n    lse_close: Date.UTC(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate(),\n      15,\n      30,\n      0\n    ),\n    lse_open: Date.UTC(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate(),\n      7,\n      0,\n      0\n    ),\n    nyse_open: Date.UTC(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate(),\n      13,\n      30,\n      0\n    ),\n    nyse_close: Date.UTC(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate(),\n      20,\n      0,\n      0\n    ),\n  };\n\n  function timeleft(endDate) {\n    endDate = new Date(endDate);\n    let difference = endDate - +new Date();\n    let timeLeft = {};\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n    return timeLeft;\n  }\n  const [radioSelect, setRadioSelect] = useState('lse_open');\n  const [remainingTime, setRemainingTime] = useState(timeleft(timings[radioSelect]));\n\n  useEffect(() => {\n    setTimeout(() => {\n      setRemainingTime(timeleft(timings[radioSelect]));\n    }, 1000);\n  });\n\n  function displayTimer() {\n    if (Object.keys(remainingTime).length === 0) {\n      return <Typography>The market is {radioSelect.split('_')[1]}.</Typography>;\n    } else {\n      return (\n        <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\" spacing={1}>\n          <Grid item>\n            <Typography>{remainingTime.hours}H</Typography>\n          </Grid>\n          <Grid item>\n            <Typography>{remainingTime.minutes}M</Typography>\n          </Grid>\n          <Grid item>\n            <Typography>{remainingTime.seconds}S</Typography>\n          </Grid>\n        </Grid>\n      );\n    }\n  }\n\n  return (\n    <div style={{ textAlign: 'center', margin: \"2% 0\" }}>\n      <RadioGroup\n        value={radioSelect}\n        onChange={(event) => setRadioSelect(event.target.value)}\n        defaultValue=\"lse_open\"\n      >\n        <Grid container direction=\"row\" justify=\"center\">\n          {[\n            { value: 'lse_open', name: 'LSE Opening' },\n            { value: 'lse_close', name: 'LSE Closing' },\n            { value: 'nyse_open', name: 'NYSE Opening' },\n            { value: 'nyse_close', name: 'NYSE Closing' },\n          ].map((row) => {\n            return (\n              <Grid item xs={6} sm={3}>\n                <FormControlLabel\n                  value={row.value}\n                  label={row.name}\n                  control={<Radio />}\n                />\n              </Grid>\n            );\n          })}\n        </Grid>\n      </RadioGroup>\n\n      <div style={{ margin: 'auto' }}>{displayTimer()}</div>\n    </div>\n  );\n};\n\nexport default Countdown;\n","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport BoringTracker from './BoringTracker';\nimport CryptoTracker from './CryptoTracker';\nimport Countdown from './Countdown';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: { margin: '0 0% 0 0%' },\n  };\n});\n\nconst AssetTracker = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CryptoTracker />\n      <Countdown />\n      <BoringTracker />\n    </div>\n  );\n};\n\nexport default AssetTracker;\n","import React from 'react';\nimport ContactMe from './ContactMe';\nimport AboutMe from './AboutMe';\nimport SideBar from './SideBar';\nimport AssetTracker from './AssetTracker/AssetTracker';\nimport CallIcon from '@material-ui/icons/Call';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst Pages = [\n  {\n    name: 'About Me',\n    link: '/about-me',\n    component: AboutMe,\n    icon: <AccountCircleIcon />,\n  },\n  { name: 'Contact Me', link: '/contact-me', component: ContactMe, icon: <CallIcon /> },\n  {\n    name: 'Asset Tracker',\n    link: '/tracker',\n    component: AssetTracker,\n    icon: <TrendingUpIcon />,\n  },\n];\n\nexport { ContactMe, AboutMe, SideBar, Pages, AssetTracker };\n","import React from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { SideBar, Pages } from './components';\n\nconst App = () => {\n  return (\n    <div>\n      <HashRouter basename={'/'}>\n        <SideBar />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return localStorage.getItem('homepage') === null ||\n                localStorage.getItem('homepage') === '' ? (\n                <Redirect to=\"/about-me\" />\n              ) : (\n                <Redirect to={localStorage.getItem('homepage')} />\n              );\n            }}\n          />\n          {Pages.map((page) => {\n            return <Route exact path={page.link} component={page.component} />;\n          })}\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />,document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}