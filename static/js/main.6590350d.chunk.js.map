{"version":3,"sources":["img/Resume.pdf","img/pp.jpg","components/Profile.js","components/ContactMe.js","components/Projects.js","components/ApplicationBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","props","state","style","width","margin","Paper","color","elevation","Grid","container","direction","justify","spacing","item","Typography","variant","align","src","profilePic","alignItems","Button","href","target","rel","fontSize","Pdf","Component","ContactMe","formSubmitted","name","email","contactNumber","message","fetch","this","setState","padding","height","id","enctype","action","onsubmit","Link","TextField","type","label","onChange","event","value","fullWidth","multiline","rows","onClick","handleSubmit","border","backgroundColor","textTransform","cursor","display","onload","Projects","projects","title","description","buttons","map","Card","CardMedia","CardContent","component","CardActions","button","size","ApplicationBar","menuItems","home","icon","displayName","contactMe","isDrawerOpen","appBarTransparent","topLeftIconIsMenu","oldState","AppBar","position","Toolbar","changeDisplayPage","flexGrow","Switch","checked","darkModeSwitchState","toggleDarkMode","toggleDrawer","jsutify","List","textAlign","Object","keys","key","ListItem","ListItemIcon","ListItemText","disableTypography","primary","Homepage","pages","pageName","displayPage","isDark","isLoaded","theme","createMuiTheme","palette","secondary","main","ThemeProvider","CssBaseline","currentPage","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.6590350d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.67b2575b.pdf\";","module.exports = __webpack_public_path__ + \"static/media/pp.14eb219e.jpg\";","import React, { Component } from \"react\";\nimport { Paper, Card, Typography, Link, Grid, Button } from \"@material-ui/core\";\nimport Pdf from \"../img/Resume.pdf\";\nimport profilePic from \"../img/pp.jpg\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div style={{ width: \"80vw\", margin: \"auto\" }}>\n        <Paper color=\"secondary\" elevation={0}>\n          <Grid container direction=\"column\" justify=\"center\" spacing=\"2\">\n            <Grid item>\n              <Typography variant=\"h3\" align=\"left\">\n                Hi. My name is Sherman.\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h5\" align=\"left\">\n                Welcome to my developer profile.\n              </Typography>\n            </Grid>\n            <Grid item container justify=\"center\">\n              <Grid item>\n                <img src={profilePic} style={{ width: \"80vw\" }} />\n              </Grid>\n            </Grid>\n            <Grid\n              item\n              container\n              direction=\"row\"\n              alignItems=\"center\"\n              justify=\"center\"\n              spacing={3}\n            >\n              <Grid item>\n                <Button\n                  href=\"https://www.linkedin.com/in/shrmnl/\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  <LinkedInIcon fontSize=\"large\" />\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  href=\"https://github.com/shermanleejm\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  <GitHubIcon fontSize=\"large\" />\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button href={Pdf} target=\"_blank\" rel=\"noopener\">\n                  <MenuBookIcon fontSize=\"large\" />\n                </Button>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"p\">\n                I am a current Senior in Singapore Management University with a\n                deep interest in solving real world problems with code.\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"p\">\n                In my free time, I like to play Destiny 2 and watch Binging with\n                Babish, often at the same time.\n              </Typography>\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport {\n  Paper,\n  TextField,\n  Grid,\n  Typography,\n  Button,\n  Link,\n  makeStyles,\n} from \"@material-ui/core\";\n\nclass ContactMe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formSubmitted: false,\n      name: \"\",\n      email: \"\",\n      contactNumber: \"\",\n      message: \"\",\n    };\n  }\n\n  handleSubmit() {\n    fetch(\n      \"https://docs.google.com/forms/d/e/1FAIpQLSeRk58rRnbE1XDd_6RZ6i9RIPTDPZT9YgsQ_4B7-Ff0mqQE3w/formResponse?usp=pp_url&entry.963742205=\" +\n        this.state.name +\n        \"&entry.1053435119=\" +\n        this.state.email +\n        \"&entry.1110637641=\" +\n        this.state.contactNumber +\n        \"&entry.63678808=\" +\n        this.state.message\n    );\n    this.setState({\n      formSubmitted: true,\n    });\n  }\n\n  render() {\n    if (this.state.formSubmitted) {\n      return (\n        <div style={{ width: \"80vw\", padding: 20, margin: \"auto\" }}>\n          <Typography variant=\"h4\">\n            Thank you for your submission I will get back to you as soon as\n            possible!\n          </Typography>\n        </div>\n      );\n    } else {\n      return (\n        <div style={{ height: \"100%\", width: \"80vw\", padding: 20, margin: \"auto\" }}>\n          <form\n            name=\"gform\"\n            id=\"gform\"\n            enctype=\"text/plain\"\n            action=\"https://docs.google.com/forms/d/e/1FAIpQLSeRk58rRnbE1XDd_6RZ6i9RIPTDPZT9YgsQ_4B7-Ff0mqQE3w/formResponse?\"\n            target=\"hidden_iframe\"\n            onsubmit=\"submitted=true;\"\n          >\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <Typography variant=\"h5\">\n                  You may contact me at +65 86601996 and{\" \"}\n                  <Link href=\"mailto:leesherman@live.com.sg\" color=\"secondary\">\n                    leesherman@live.com.sg\n                  </Link>\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\">\n                  Alternatively, you may fill in the form below and I shall get\n                  back to you as soon as possible.\n                </Typography>\n              </Grid>\n              <Grid item>\n                <TextField\n                  type=\"text\"\n                  name=\"entry.963742205\"\n                  id=\"entry.963742205\"\n                  label=\"Name\"\n                  onChange={(event) => {\n                    this.setState({ name: event.target.value });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  type=\"text\"\n                  name=\"entry.1053435119\"\n                  id=\"entry.1053435119\"\n                  label=\"Email\"\n                  onChange={(event) => {\n                    this.setState({ email: event.target.value });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  type=\"text\"\n                  name=\"entry.1110637641\"\n                  id=\"entry.1110637641\"\n                  label=\"Contact Number\"\n                  onChange={(event) => {\n                    this.setState({ contactNumber: event.target.value });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  type=\"text\"\n                  name=\"entry.63678808\"\n                  id=\"entry.63678808\"\n                  label=\"Message\"\n                  onChange={(event) => {\n                    this.setState({ message: event.target.value });\n                  }}\n                  fullWidth\n                  multiline\n                  rows={4}\n                />\n              </Grid>\n              <Grid item>\n                <input\n                  id=\"popUp\"\n                  type=\"submit\"\n                  value=\"submit\"\n                  onClick={() => this.handleSubmit()}\n                  style={{\n                    border: \"none\",\n                    backgroundColor: \"#ffffff\",\n                    fontSize: \"15px\",\n                    textTransform: \"uppercase\",\n                    cursor: \"pointer\",\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </form>\n          {/* <Button\n            onClick={() => {\n              console.log(this.state);\n            }}\n          >\n            Check values\n          </Button> */}\n          <iframe\n            name=\"hidden_iframe\"\n            id=\"hidden_iframe\"\n            style={{ display: \"none\" }}\n            onload=\"if(submitted) {}\"\n          ></iframe>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ContactMe;\n// https://docs.google.com/forms/d/e/1FAIpQLSeRk58rRnbE1XDd_6RZ6i9RIPTDPZT9YgsQ_4B7-Ff0mqQE3w/viewform?usp=pp_url&entry.963742205=Sherman&entry.1053435119=leesherman@live.com.sg&entry.1110637641=86601996&entry.63678808=you+rock!\n// https://docs.google.com/forms/d/e/1FAIpQLSeRk58rRnbE1XDd_6RZ6i9RIPTDPZT9YgsQ_4B7-Ff0mqQE3w/formResponse?usp=pp_url&entry.963742205=Name&entry.1053435119=Email&entry.1110637641=Mobile+Number&entry.63678808=Question\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  Typography,\n  Button,\n  CardActions,\n} from \"@material-ui/core\";\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  projects = [\n    {\n      title: \"Social Analytics\",\n      description:\n        \"In this project, we set out to determine what students in Singapore were looking for when they were deciding on higher learning institutes. We determined that polytechnic students really depended on the internet for information whereas junior college students still depended on word of mouth. Specific insights may be found in the tableau dashboard below.\",\n      buttons: [\n        {\n          href:\n            \"https://public.tableau.com/views/IS434UniversityAnalysis_new/IS434UniversitySentiments?:language=en-GB&:display_count=y&:origin=viz_share_link\",\n\n          title: \"Tableau\",\n        },\n        {\n          href: \"https://github.com/shermanleejm/Social_Analytics\",\n\n          title: \"Github\",\n        },\n      ],\n    },\n  ];\n\n  render() {\n    return (\n      <div\n        style={{\n          height: \"100%\",\n          width: \"80vw\",\n          margin: \"auto\",\n          padding: \"20px\",\n        }}\n      >\n        {this.projects.map((value) => (\n          <Card>\n            <CardMedia />\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                {value.title}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                {value.description}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              {value.buttons.map((button) => (\n                <Button\n                  href={button.href}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                  size=\"small\"\n                >\n                  {button.title}\n                </Button>\n              ))}\n            </CardActions>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  SwipeableDrawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Paper,\n  Grid,\n  Switch,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\nclass ApplicationBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDrawerOpen: false,\n      appBarTransparent: true,\n      topLeftIconIsMenu: true,\n    };\n  }\n\n  toggleDrawer() {\n    var oldState = this.state;\n    this.setState({\n      isDrawerOpen: !oldState.isDrawerOpen,\n      appBarTransparent: !oldState.appBarTransparent,\n      topLeftIconIsMenu: !oldState.topLeftIconIsMenu,\n    });\n  }\n\n  menuItems = {\n    home: { icon: <PersonIcon fontSize=\"large\" />, displayName: \"Profile\" },\n    contactMe: {\n      icon: <PhoneIcon fontSize=\"large\" />,\n      displayName: \"Contact Me\",\n    },\n    projects: {\n      icon: <FolderIcon fontSize=\"large\" />,\n      displayName: \"Projects\",\n    },\n  };\n\n  render() {\n    return (\n      <div style={{ width: \"100vw\" }}>\n        <AppBar\n          color={this.state.appBarTransparent ? \"transparent\" : \"#ffffff\"}\n          position=\"fixed\"\n          elevation={0}\n        >\n          <Grid container direction=\"column\">\n            <Grid item>\n              <Toolbar>\n                <CodeIcon\n                  onClick={() => {\n                    this.props.changeDisplayPage(\"home\");\n                  }}\n                  style={{ cursor: \"pointer\" }}\n                  fontSize=\"large\"\n                />\n                <Typography style={{ flexGrow: 1 }} />\n\n                <Typography variant=\"body2\">Dark Mode</Typography>\n                <Switch\n                  checked={this.props.darkModeSwitchState}\n                  onChange={() => this.props.toggleDarkMode()}\n                ></Switch>\n                {this.state.topLeftIconIsMenu ? (\n                  <MenuIcon\n                    onClick={() => this.toggleDrawer()}\n                    style={{ cursor: \"pointer\" }}\n                    fontSize=\"large\"\n                  />\n                ) : (\n                  <CloseIcon\n                    onClick={() => this.toggleDrawer()}\n                    style={{ cursor: \"pointer\" }}\n                    fontSize=\"large\"\n                  />\n                )}\n              </Toolbar>\n            </Grid>\n            <Grid item container alignItems=\"center\" jsutify=\"center\">\n              {this.state.isDrawerOpen && (\n                <div\n                  style={{\n                    width: \"100vw\",\n                    height: \"100vh\",\n                  }}\n                >\n                  <List style={{ textAlign: \"center\" }}>\n                    {Object.keys(this.menuItems).map((key) => {\n                      return (\n                        <ListItem\n                          button\n                          onClick={() => {\n                            this.props.changeDisplayPage(key);\n                            this.toggleDrawer();\n                          }}\n                        >\n                          <ListItemIcon>\n                            {this.menuItems[key][\"icon\"]}\n                          </ListItemIcon>\n                          <ListItemText\n                            disableTypography\n                            primary={\n                              <Typography style={{ fontSize: \"24px\" }}>\n                                {this.menuItems[key][\"displayName\"]}\n                              </Typography>\n                            }\n                          />\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                </div>\n              )}\n            </Grid>\n          </Grid>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default ApplicationBar;\n","import React, { Component, useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  Paper,\n  ThemeProvider,\n  createMuiTheme,\n  Grid,\n  Switch,\n  makeStyles,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport {\n  orange,\n  lightBlue,\n  deepPurple,\n  deepOrange,\n} from \"@material-ui/core/colors\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Profile from \"./components/Profile\";\nimport ContactMe from \"./components/ContactMe\";\nimport Projects from \"./components/Projects\";\n\nimport ApplicationBar from \"./components/ApplicationBar\";\n\nclass Homepage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      displayPage: \"home\",\n      isDark: false,\n    };\n  }\n\n  pages = {\n    home: <Profile />,\n    contactMe: <ContactMe />,\n    projects: <Projects />,\n  };\n\n  // classes = makeStyles((theme) => ({\n  //   root: {\n  //     flexGrow: 1,\n  //     width: \"100%\",\n  //     height: \"100%\",\n  //   },\n  // }));\n\n  //callback function\n  changeDisplayPage = (pageName) => {\n    this.setState({\n      displayPage: pageName,\n    });\n  };\n\n  toggleDarkMode = () => {\n    this.setState({\n      isDark: !this.state.isDark,\n    });\n  }\n\n  render() {\n    var theme = createMuiTheme({\n      palette: {\n        type: this.state.isDark ? \"dark\" : \"light\",\n        secondary: {\n          main: this.state.isDark ? \"#ff3232\" : \"#498af2\",\n        }\n      },\n    });\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Paper elevation={0} style={{ height: \"100%\" }}>\n          <CssBaseline />\n          <ApplicationBar\n            changeDisplayPage={this.changeDisplayPage}\n            currentPage={this.state.displayPage}\n            darkModeSwitchState={this.state.isDark}\n            toggleDarkMode={this.toggleDarkMode}\n          />\n          <Toolbar />\n          <Typography variant=\"h6\">\n            {this.pages[this.state.displayPage]}\n          </Typography>\n        </Paper>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default Homepage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />,document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}